
Configuración de la Memoria

Nombre           Origen             Longitud           Atributos
public_ram       0x0000000070030000 0x0000000000001000
public_stack     0x0000000070020000 0x0000000000002280
*default*        0x0000000000000000 0xffffffffffffffff

Guión del enlazador y mapa de memoria

                0x0000000070010000                _PUBLIC_ROM_INIT = 0x70010000
                0x0000000070020000                _PUBLIC_STACK_INIT = 0x70020000
                0x0000000070030000                _PUBLIC_RAM_INIT = 0x70030000
                0x00000000700102e0                _PUBLIC_LMA_SECTION_DATA = ((_PUBLIC_ROM_INIT + _PUBLIC_SIZE_INICIO) + _PUBLIC_SIZE_TEXT)
                0x0000000070030244                _PUBLIC_VMA_SECTION_DATA = (_PUBLIC_RAM_INIT + _PUBLIC_SIZE_TEXT)
                0x0000000000000000                _ISR_TABLE_START = 0x0
                0x0000000000001000                C_STACK_SIZE = 0x1000
                0x0000000000000080                IRQ_STACK_SIZE = 0x80
                0x0000000000000080                FIQ_STACK_SIZE = 0x80
                0x0000000000000080                SVC_STACK_SIZE = 0x80
                0x0000000000000080                ABT_STACK_SIZE = 0x80
                0x0000000000000080                UND_STACK_SIZE = 0x80
                0x0000000000000000                __isr_table_start__ = _ISR_TABLE_START
                0x0000000070030000                . = _PUBLIC_RAM_INIT

.inicio         0x0000000070010000       0x9c
                0x0000000070010000                __ROM_start__ = .
 *(.inicio_reset_vector)
 .inicio_reset_vector
                0x0000000070010000       0x18 obj/reset_vector_s.o
                0x0000000070010000                _reset_vector
 *(.inicio*)
 .inicio        0x0000000070010018       0x44 obj/td3_memcopy_s.o
                0x0000000070010018                _Copia_ROM_a_RAM
 .inicio        0x000000007001005c       0x40 obj/td3_c.o
                0x000000007001005c                td3_memcopy
                0x000000007001009c                __ROM_end__ = .
                0x000000000000009c                _PUBLIC_SIZE_INICIO = (__ROM_end__ - __ROM_start__)

.text           0x0000000070030000      0x244 dirección de carga 0x000000007001009c
                0x0000000070030000                __text_start__ = .
 *(.text*)
 .text          0x0000000070030000        0x0 obj/low_level_cpu_access_s.o
 .text_pub      0x0000000070030000       0xc4 obj/low_level_cpu_access_s.o
                0x0000000070030000                _irq_enable
                0x0000000070030020                _irq_disable
                0x000000007003003c                _LOAD_ISR_Vectors_Base
                0x0000000070030050                _HALT_CPU
                0x0000000070030070                _READ_CPSR_REGS
                0x0000000070030080                _EOI
                0x0000000070030090                _WRITE_8
                0x0000000070030098                _WRITE_16
                0x00000000700300a0                _WRITE_32
                0x00000000700300a8                _READ_8
                0x00000000700300b0                _READ_16
                0x00000000700300b8                _READ_32
 .text          0x00000000700300c4        0x0 obj/td3_memcopy_s.o
 .text_Bootloader
                0x00000000700300c4       0x40 obj/td3_memcopy_s.o
 .text          0x0000000070030104        0x0 obj/exception_handlers_s.o
 .text_handlers
                0x0000000070030104       0x2c obj/exception_handlers_s.o
                0x0000000070030104                UND_Handler
                0x000000007003010c                SVC_Handler
                0x0000000070030110                PREF_Handler
                0x0000000070030118                ABT_Handler
                0x0000000070030120                IRQ_Handler
                0x0000000070030128                FIQ_Handler
 .text          0x0000000070030130        0x0 obj/startup_s.o
 .text_start_code
                0x0000000070030130       0xb0 obj/startup_s.o
                0x0000000070030170                _start
 .text          0x00000000700301e0        0x0 obj/reset_vector_s.o
 .text          0x00000000700301e0        0x0 obj/td3_c.o
 .text          0x00000000700301e0       0x64 obj/gic_c.o
                0x00000000700301e0                __gic_init
                0x0000000070030244                __text_end__ = .
                0x0000000000000244                _PUBLIC_SIZE_TEXT = (__text_end__ - __text_start__)
                0x000000007001009c                _SECTION_TEXT_LMA = LOADADDR (.text)

.glue_7         0x0000000070030244        0x0 dirección de carga 0x00000000700102e0
 .glue_7        0x0000000070030244        0x0 linker stubs

.glue_7t        0x0000000070030244        0x0 dirección de carga 0x00000000700102e0
 .glue_7t       0x0000000070030244        0x0 linker stubs

.vfp11_veneer   0x0000000070030244        0x0 dirección de carga 0x00000000700102e0
 .vfp11_veneer  0x0000000070030244        0x0 linker stubs

.v4_bx          0x0000000070030244        0x0 dirección de carga 0x00000000700102e0
 .v4_bx         0x0000000070030244        0x0 linker stubs

.iplt           0x0000000070030244        0x0 dirección de carga 0x00000000700102e0
 .iplt          0x0000000070030244        0x0 obj/low_level_cpu_access_s.o

.rel.dyn        0x0000000070030244        0x0 dirección de carga 0x00000000700102e0
 .rel.iplt      0x0000000070030244        0x0 obj/low_level_cpu_access_s.o

.data           0x0000000070030244        0x8 dirección de carga 0x00000000700102e0
                0x0000000070030244                __data_start__ = .
 *(.data*)
 .data          0x0000000070030244        0x0 obj/low_level_cpu_access_s.o
 .data          0x0000000070030244        0x8 obj/td3_memcopy_s.o
 .data          0x000000007003024c        0x0 obj/exception_handlers_s.o
 .data          0x000000007003024c        0x0 obj/startup_s.o
 .data          0x000000007003024c        0x0 obj/reset_vector_s.o
 .data          0x000000007003024c        0x0 obj/td3_c.o
 .data          0x000000007003024c        0x0 obj/gic_c.o
                0x000000007003024c                __data_end__ = .
                0x0000000000000008                _PUBLIC_SIZE_DATA = (__data_end__ - __data_start__)
                0x00000000700102e0                _SECTION_DATA_LMA = LOADADDR (.data)

.igot.plt       0x000000007003024c        0x0 dirección de carga 0x00000000700102e8
 .igot.plt      0x000000007003024c        0x0 obj/low_level_cpu_access_s.o

.bss            0x000000007003024c        0x4 dirección de carga 0x00000000700102e8
                0x000000007003024c                . = ALIGN (0x4)
                0x000000007003024c                __bss_start__ = .
 *(.bss*)
 .bss           0x000000007003024c        0x0 obj/low_level_cpu_access_s.o
 .bss           0x000000007003024c        0x4 obj/td3_memcopy_s.o
 .bss           0x0000000070030250        0x0 obj/exception_handlers_s.o
 .bss           0x0000000070030250        0x0 obj/startup_s.o
 .bss           0x0000000070030250        0x0 obj/reset_vector_s.o
 .bss           0x0000000070030250        0x0 obj/td3_c.o
 .bss           0x0000000070030250        0x0 obj/gic_c.o
                0x0000000070030250                __bss_end__ = .

.stack          0x0000000070020000     0x2280
                0x0000000070020000                __stack_start__ = .
 *(.stack*)
 .stack         0x0000000070020000     0x1000 obj/td3_memcopy_s.o
                0x0000000070021080                . = (. + IRQ_STACK_SIZE)
 *fill*         0x0000000070021000       0x80 
                0x0000000070021080                . = ALIGN (0x4)
                0x0000000070021080                __irq_stack_top__ = .
                0x0000000070021100                . = (. + FIQ_STACK_SIZE)
 *fill*         0x0000000070021080       0x80 
                0x0000000070021100                . = ALIGN (0x4)
                0x0000000070021100                __fiq_stack_top__ = .
                0x0000000070021180                . = (. + SVC_STACK_SIZE)
 *fill*         0x0000000070021100       0x80 
                0x0000000070021180                . = ALIGN (0x4)
                0x0000000070021180                __svc_stack_top__ = .
                0x0000000070021200                . = (. + ABT_STACK_SIZE)
 *fill*         0x0000000070021180       0x80 
                0x0000000070021200                . = ALIGN (0x4)
                0x0000000070021200                __abt_stack_top__ = .
                0x0000000070021280                . = (. + UND_STACK_SIZE)
 *fill*         0x0000000070021200       0x80 
                0x0000000070021280                . = ALIGN (0x4)
                0x0000000070021280                __und_stack_top__ = .
                0x0000000070022280                . = (. + C_STACK_SIZE)
 *fill*         0x0000000070021280     0x1000 
                0x0000000070022280                . = ALIGN (0x4)
                0x0000000070022280                __sys_stack_top__ = .
                0x0000000070022280                __stack_end__ = .
LOAD obj/low_level_cpu_access_s.o
LOAD obj/td3_memcopy_s.o
LOAD obj/exception_handlers_s.o
LOAD obj/startup_s.o
LOAD obj/reset_vector_s.o
LOAD obj/td3_c.o
LOAD obj/gic_c.o
OUTPUT(obj/mi_TP2_v8.elf elf32-littlearm)
LOAD linker stubs

.ARM.attributes
                0x0000000000000000       0x39
 .ARM.attributes
                0x0000000000000000       0x29 obj/low_level_cpu_access_s.o
 .ARM.attributes
                0x0000000000000029       0x29 obj/td3_memcopy_s.o
 .ARM.attributes
                0x0000000000000052       0x29 obj/exception_handlers_s.o
 .ARM.attributes
                0x000000000000007b       0x29 obj/startup_s.o
 .ARM.attributes
                0x00000000000000a4       0x29 obj/reset_vector_s.o
 .ARM.attributes
                0x00000000000000cd       0x35 obj/td3_c.o
 .ARM.attributes
                0x0000000000000102       0x35 obj/gic_c.o

.comment        0x0000000000000000       0x2b
 .comment       0x0000000000000000       0x2b obj/td3_c.o
                                         0x2c (tamaño antes de la relajación)
 .comment       0x000000000000002b       0x2c obj/gic_c.o

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 obj/td3_c.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/gic_c.o

.debug_line     0x0000000000000000      0x2ea
 .debug_line    0x0000000000000000       0x76 obj/low_level_cpu_access_s.o
 .debug_line    0x0000000000000076       0x73 obj/td3_memcopy_s.o
 .debug_line    0x00000000000000e9       0x52 obj/exception_handlers_s.o
 .debug_line    0x000000000000013b       0x70 obj/startup_s.o
 .debug_line    0x00000000000001ab       0x47 obj/reset_vector_s.o
 .debug_line    0x00000000000001f2       0x57 obj/td3_c.o
 .debug_line    0x0000000000000249       0xa1 obj/gic_c.o

.debug_info     0x0000000000000000      0x4b6
 .debug_info    0x0000000000000000       0x26 obj/low_level_cpu_access_s.o
 .debug_info    0x0000000000000026       0x22 obj/td3_memcopy_s.o
 .debug_info    0x0000000000000048       0x26 obj/exception_handlers_s.o
 .debug_info    0x000000000000006e       0x26 obj/startup_s.o
 .debug_info    0x0000000000000094       0x26 obj/reset_vector_s.o
 .debug_info    0x00000000000000ba       0xc7 obj/td3_c.o
 .debug_info    0x0000000000000181      0x335 obj/gic_c.o

.debug_abbrev   0x0000000000000000      0x1e3
 .debug_abbrev  0x0000000000000000       0x14 obj/low_level_cpu_access_s.o
 .debug_abbrev  0x0000000000000014       0x12 obj/td3_memcopy_s.o
 .debug_abbrev  0x0000000000000026       0x14 obj/exception_handlers_s.o
 .debug_abbrev  0x000000000000003a       0x14 obj/startup_s.o
 .debug_abbrev  0x000000000000004e       0x14 obj/reset_vector_s.o
 .debug_abbrev  0x0000000000000062       0x9a obj/td3_c.o
 .debug_abbrev  0x00000000000000fc       0xe7 obj/gic_c.o

.debug_aranges  0x0000000000000000       0xe8
 .debug_aranges
                0x0000000000000000       0x20 obj/low_level_cpu_access_s.o
 .debug_aranges
                0x0000000000000020       0x28 obj/td3_memcopy_s.o
 .debug_aranges
                0x0000000000000048       0x20 obj/exception_handlers_s.o
 .debug_aranges
                0x0000000000000068       0x20 obj/startup_s.o
 .debug_aranges
                0x0000000000000088       0x20 obj/reset_vector_s.o
 .debug_aranges
                0x00000000000000a8       0x20 obj/td3_c.o
 .debug_aranges
                0x00000000000000c8       0x20 obj/gic_c.o

.debug_str      0x0000000000000000      0x332
 .debug_str     0x0000000000000000       0xa5 obj/low_level_cpu_access_s.o
 .debug_str     0x00000000000000a5       0x12 obj/td3_memcopy_s.o
                                         0x9c (tamaño antes de la relajación)
 .debug_str     0x00000000000000b7       0x19 obj/exception_handlers_s.o
                                         0xa3 (tamaño antes de la relajación)
 .debug_str     0x00000000000000d0        0xe obj/startup_s.o
                                         0x98 (tamaño antes de la relajación)
 .debug_str     0x00000000000000de       0x13 obj/reset_vector_s.o
                                         0x9d (tamaño antes de la relajación)
 .debug_str     0x00000000000000f1       0xe3 obj/td3_c.o
                                        0x173 (tamaño antes de la relajación)
 .debug_str     0x00000000000001d4      0x15e obj/gic_c.o
                                        0x2c0 (tamaño antes de la relajación)

.debug_ranges   0x0000000000000000       0x40
 .debug_ranges  0x0000000000000000       0x20 obj/td3_memcopy_s.o
 .debug_ranges  0x0000000000000020       0x10 obj/td3_c.o
 .debug_ranges  0x0000000000000030       0x10 obj/gic_c.o

.debug_frame    0x0000000000000000       0x70
 .debug_frame   0x0000000000000000       0x38 obj/td3_c.o
 .debug_frame   0x0000000000000038       0x38 obj/gic_c.o
