ARM GAS  src/exception_handlers.s 			page 1


   1              	/**
   2              	 * Archivo: exception_handlers.s
   3              	 * FunciÃ³n: manejadores de las excepciones
   4              	 * Autor: Gabriel Crisafio
   5              	 **/
   6              	
   7              	
   8              	
   9              	
  10              	.global UND_Handler
  11              	.global SVC_Handler
  12              	.global PREF_Handler
  13              	.global ABT_Handler
  14              	.global IRQ_Handler
  15              	.global FIQ_Handler
  16              	
  17              	.section .text_handlers
  18              	
  19              	
  20              	//NOTA cuando el procesador entra a un Handler de Excepcion se guarda CPSR --> SPSR automaticamente
  21              	
  22              	UND_Handler:  
  23              	    /* Guardar R10 = "INV" */
  24 0000 00142DE9 	    PUSH { R10, R12 } // dentro del Handler voy a utilizar R10 y R12, pusheo a la pila para guardar
  25 0004 68C09FE5 	    LDR R12, =_UND_string
  26 0008 00A09CE5 	    LDR R10, [R12]
  27 000c 0014BDE8 	    POP { R10, R12 } // restauro valores
  28              	
  29 0010 0EF0B0E1 	    MOVS PC, LR
  30              	
  31              	
  32              	SVC_Handler:
  33              	    /* Guardar R10 = "SVC" */
  34 0014 00142DE9 	    PUSH { R10, R12 } // dentro del Handler voy a utilizar R10 y R12, pusheo a la pila para guardar
  35 0018 58C09FE5 	    LDR R12, =_SVC_string
  36 001c 00A09CE5 	    LDR R10, [R12]
  37 0020 0014BDE8 	    POP { R10, R12 } // restauro valores
  38              	
  39 0024 0EF0B0E1 	    MOVS PC, LR
  40              	
  41              	PREF_Handler:
  42 0028 04E04EE2 	    SUB LR, LR, #4 // LR = LR - 4
  43              	
  44 002c 0EF0B0E1 	    MOVS PC, LR
  45              	
  46              	
  47              	ABT_Handler:
  48 0030 08E04EE2 	    SUB LR, LR, #8 // LR = LR - 8
  49              	
  50              	    /* Deshabilitamos Interrupciones */
  51 0034 80000CF1 	    CPSID I // se debe deshabilitar para que Abort_Handler tenga mayor prioridad
  52              	            // hasta el momento, solo hay interrupciones de IRQ, si hubiese FIQ deberian deshabilit
  53              	
  54              	    /* Guardar R10 = "MEM" */
  55 0038 00142DE9 	    PUSH { R10, R12 } // dentro del Handler voy a utilizar R10 y R12, pusheo a la pila para guardar
  56 003c 38C09FE5 	    LDR R12, =_ABT_string
  57 0040 00A09CE5 	    LDR R10, [R12]
ARM GAS  src/exception_handlers.s 			page 2


  58 0044 0014BDE8 	    POP { R10, R12 } // restauro valores
  59              	
  60 0048 800008F1 	    CPSIE I // Habilitamos interrupciones nuevamente
  61              	
  62 004c 0EF0B0E1 	    MOVS PC, LR
  63              	
  64              	IRQ_Handler:
  65 0050 04E04EE2 	    SUB LR, LR, #4 // LR = LR - 4
  66 0054 0F402DE9 	    STMFD R13!, { r0-r3 , r14 }
  67              	
  68              	    /* Guardar R10 = "IRQ" */
  69 0058 20C09FE5 	    LDR R12, =_IRQ_string
  70 005c 00A09CE5 	    LDR R10, [R12]
  71              	
  72              	    /* Handler Code */
  73 0060 FEFFFFEB 	    BL kernel_handler_irq
  74              	
  75 0064 0F80FDE8 	    LDMFD R13!, { r0-r3, pc }^
  76 0068 0EF0B0E1 	    MOVS PC, LR
  77              	
  78              	// en Caso de que GIC tenga mas de una INT: Handler Anidado
  79              	//IRQ_Handler:
  80              	//    SUB     lr, lr, #4
  81              	//    SRSFD    sp!, #0x1f      @ use SRS to save LR_irq and SPSR_irq in one step onto the
  82              	//                             @ System mode stack
  83              	//    CPS        #0x1f           @ Use CPS to switch to system mode
  84              	//  
  85              	//    PUSH       {r0-r3, r12}    @S tore remaining AAPCS registers on the System mode stack
  86              	//    AND        r1, sp, #4      @ Ensure stack is 8-byte aligned. Store adjustment and
  87              	//                               @ LR_sys to stack
  88              	//
  89              	//    SUB        sp, sp, r1
  90              	//
  91              	//    PUSH       {r1, lr}
  92              	//
  93              	//    BL                         @ identify_and_clear_source
  94              	//
  95              	//    CPSIE       i              @ Enable IRQ with CPS
  96              	//
  97              	//    BL          kernel_handler_irq
  98              	//
  99              	//    CPSID       i              @ Disable IRQ with CPS
 100              	//
 101              	//    POP         {r1, lr}       @ Restore LR_sys
 102              	//    ADD         sp, sp, r1     @ Unadjust stack
 103              	//    POP         {r0-r3, r12}   @ Restore AAPCS registers
 104              	//    RFEFD       sp!            @ Return using RFE from the System mode stack
 105              	
 106              	
 107              	FIQ_Handler:
 108 006c 04E04EE2 	    SUB LR, LR, #4 // LR = LR - 4
 109              	
 110 0070 0EF0B0E1 	    MOVS PC, LR
 111              	
 112              	
 113              	/* Seccion de datos inicializados */ 
 114              	.section .data
ARM GAS  src/exception_handlers.s 			page 3


 115              	_IRQ_string:
 116 0000 49525100 	    .asciz "IRQ"
 117              	
 118              	.section .data
 119              	_UND_string:
 120 0004 494E5600 	    .asciz "INV"
 121              	
 122              	.section .data
 123              	_ABT_string:
 124 0008 4D454D00 	    .asciz "MEM"
 125              	
 126              	.section .data
 127              	_SVC_string:
 128 000c 53564300 	    .asciz "SVC"...
