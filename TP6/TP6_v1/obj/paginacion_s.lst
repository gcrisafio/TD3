ARM GAS  src/paginacion.s 			page 1


   1              	/**
   2              	* Archivo: paginacion.s
   3              	* Función: Crea e inicializa las tablas de paginación
   4              	* Autor: Gabriel Crisafio
   5              	**/
   6              	
   7              	    .global _paginacion
   8              	
   9              	    .extern _STACK_INIT
  10              	
  11              	    .extern _tabla_nivel_1
  12              	    .extern _exception_page_init
  13              	    .extern _timer0_page_init
  14              	    .extern _gic_page_init
  15              	    .extern _memory_page_init
  16              	    .extern _dinamic_pages_init
  17              	    @ Direcciones físicas
  18              	    .extern _ADDR_TIMER_O
  19              	    .extern _ADDR_GIC_C
  20              	    .extern _ADDR_GIC_D
  21              	    .extern _ISR_TABLE_START    
  22              	    .extern _PUBLIC_RAM_INIT
  23              	    .extern _PUBLIC_STACK_INIT
  24              	    .extern _PUBLIC_PAGES_INIT
  25              	    .extern _PUBLIC_USR_MEM_INIT
  26              	
  27              	    .extern _long_tables
  28              	
  29              	    .section .text_pagination
  30              	
  31              	_paginacion:
  32              	@ Borro (pongo en 0) todo el espacio de memoria en donde se colocan las tablas 
  33              	@ de paginación
  34 0000 70119FE5 	    ldr r1, =_tabla_nivel_1
  35 0004 70219FE5 	    ldr r2, =_long_tables
  36 0008 0000A0E3 	    mov r0, #0
  37              	_borrado:
  38 000c 0100C1E4 	    strb r0, [r1], #1
  39 0010 012052E2 	    subs r2, #1
  40 0014 FCFFFF1A 	    bne _borrado
  41              	
  42              	/**
  43              	* Creo e inicializo las tablas de paginación
  44              	**/
  45              	// Tabla de primer nivel
  46              	Paginacion_ISR_Table:
  47              	    @ Primer entrada: Excepción (0x00000000)
  48 0018 0000A0E3 	    LDR R0, =0x00000000
  49 001c 0060A0E3 	    LDR R6, =0x00000000 @ Cargar la dirección de _Direccion_Fisica en R6
  50 0020 50519FE5 	    LDR R5, =_tabla_nivel_1        @ Cargar la dirección de L1 en R5
  51 0024 54419FE5 	    LDR R4, =L2_first_page  @ Cargar direccion L2 en R4
  52 0028 420000EB 	    BL Funcion_Paginacion
  53              	
  54              	Paginacion_Timer:
  55 002c 50019FE5 	    LDR R0, =0x10011000
  56 0030 4C619FE5 	    LDR R6, =0x10011000 @ Cargar la dirección de _Direccion_Fisica en R6
  57 0034 3C519FE5 	    LDR R5, =_tabla_nivel_1        @ Cargar la dirección de L1 en R5
ARM GAS  src/paginacion.s 			page 2


  58 0038 4B0000EB 	    BL Incrementar_Puntero_L2 @ Cargar direccion L2 en R4
  59 003c 3D0000EB 	    BL Funcion_Paginacion
  60              	
  61              	
  62              	Paginacion_GIC_CPU_Interface:
  63 0040 1E04A0E3 	    LDR R0, =0x1E000000
  64 0044 1E64A0E3 	    LDR R6, =0x1E000000 @ Cargar la dirección de _Direccion_Fisica en R6
  65 0048 28519FE5 	    LDR R5, =_tabla_nivel_1        @ Cargar la dirección de L1 en R5
  66 004c 460000EB 	    BL Incrementar_Puntero_L2 @ Cargar direccion L2 en R4
  67 0050 380000EB 	    BL Funcion_Paginacion
  68              	
  69              	Paginacion_GIC_Distributor:
  70 0054 2C019FE5 	    LDR R0, =0x1E001000
  71 0058 28619FE5 	    LDR R6, =0x1E001000 @ Cargar la dirección de _Direccion_Fisica en R6
  72 005c 14519FE5 	    LDR R5, =_tabla_nivel_1        @ Cargar la dirección de L1 en R5
  73 0060 410000EB 	    BL Incrementar_Puntero_L2 @ Cargar direccion L2 en R4
  74 0064 330000EB 	    BL Funcion_Paginacion
  75              	
  76              	Paginacion_Stack:
  77 0068 1C019FE5 	    LDR R0, =0x70020000
  78 006c 18619FE5 	    LDR R6, =0x70020000 @ Cargar la dirección de _Direccion_Fisica en R6
  79 0070 00519FE5 	    LDR R5, =_tabla_nivel_1        @ Cargar la dirección de L1 en R5
  80 0074 3C0000EB 	    BL Incrementar_Puntero_L2 @ Cargar direccion L2 en R4
  81 0078 2E0000EB 	    BL Funcion_Paginacion
  82              	
  83 007c 010A80E2 	    ADD R0, R0, #0x1000 @ Debemos Paginar todos los Stack: proxima pagina en 0x70021000 = 0x7002000
  84 0080 016A86E2 	    ADD R6, R6, #0x1000 @ Hacemos lo mismo con Direccion_Fisica  
  85 0084 EC509FE5 	    LDR R5, =_tabla_nivel_1        @ Cargar la dirección de L1 en R5
  86 0088 370000EB 	    BL Incrementar_Puntero_L2 @ Cargar direccion L2 en R4
  87 008c 290000EB 	    BL Funcion_Paginacion
  88              	    @ conocemos que la suma de todos los Stack entra en 8K (2 paginas)
  89              	
  90              	
  91              	   @               @ Tercer entrada: USR_MEM (0x70080000)
  92              	   @ ldr r0, =_memory_page_init + 0x80*4
  93              	   @ ldr r1, =_PUBLIC_USR_MEM_INIT + 0x30 + 2 
  94              	   @ str r1, [r0, #0]
  95              	
  96              	    /***************************************/ 
  97              	    /*   Paginación de las páginas         */
  98              	    /***************************************/
  99              	Paginacion_L1:
 100 0090 F8009FE5 	    LDR R0, =_PUBLIC_PAGES_INIT
 101 0094 F4609FE5 	    LDR R6, =_PUBLIC_PAGES_INIT @ Cargar la dirección de _Direccion_Fisica en R6
 102 0098 D8509FE5 	    LDR R5, =_tabla_nivel_1        @ Cargar la dirección de L1 en R5
 103 009c 320000EB 	    BL Incrementar_Puntero_L2 @ Cargar direccion L2 en R4
 104 00a0 240000EB 	    BL Funcion_Paginacion
 105              	
 106              	@ Pagino toda la tabla de nivel 1 en un bucle menos la primer entrada
 107 00a4 0470A0E1 	    mov r7, r4
 108 00a8 2026A0E1 	    MOV R2, R0, LSR #12  @ R2 = R0 >> 12 = 0x00abcd1
 109 00ac FF2002E2 	    AND R2, R2, #0xFF    @ b = R2 = R2 & 0xFF = 0x0000d1 <-- 2do puntero de Direccion Virtual
 110              	
 111 00b0 013AA0E3 	    mov r3, #0x1000
 112 00b4 0F40A0E3 	    mov r4, #15
 113 00b8 0450A0E3 	    mov r5, #4                          
 114 00bc CC609FE5 	    ldr r6, =_PUBLIC_PAGES_INIT
ARM GAS  src/paginacion.s 			page 3


 115 00c0 06A0A0E1 	    mov r10, r6         @ Para mantener la iteracion y tener la direccion de la entrada
 116              	@ pagino las diferentes entradas de la tabla de nivel 1 para la paginacion dinamica
 117              	_table_level_1:
 118 00c4 012082E2 	    add r2, r2, #0x01   @ 0x51, 0x52, ... 0x5E, 0x5F
 119 00c8 920508E0 	    mul r8, r2, r5      @ Multiplico por 4 cada valor de la suma anterior en cada iteración
 120 00cc 089087E0 	    add r9, r7, r8      @ _memory_page_init + (0x51, 0x52, ... 0x5E, 0x5F)
 121 00d0 03A08AE0 	    add r10, r10, r3    @ 0x70051000, 0x70052000, ... 0x7003E000, 0x7003F000
 122 00d4 32A08AE3 	    orr r10, r10, #0x32 @ _PUBLIC_PAGES_INIT + 0x32
 123 00d8 0900A0E1 	    mov r0, r9
 124 00dc 0A10A0E1 	    mov r1, r10
 125 00e0 001080E5 	    str r1, [r0, #0]    @ Genero la entrada de la tabla nivel 1 
 126 00e4 014044E2 	    sub r4, #1          @ decremento el contador del loop
 127 00e8 000054E3 	    cmp r4, #0
 128 00ec F4FFFF1A 	    bne _table_level_1    
 129              	
 130              	Paginacion_L2:
 131 00f0 88009FE5 	    LDR R0, =L2_first_page
 132 00f4 84609FE5 	    LDR R6, =L2_first_page @ Cargar la dirección de _Direccion_Fisica en R6
 133 00f8 78509FE5 	    LDR R5, =_tabla_nivel_1        @ Cargar la dirección de L1 en R5
 134 00fc 1A0000EB 	    BL Incrementar_Puntero_L2 @ Cargar direccion L2 en R4
 135 0100 0C0000EB 	    BL Funcion_Paginacion
 136              	
 137              	@                 @ entrada: Exception (0x70060000)
 138              	@    ldr r0, =_memory_page_init + 0x60*4
 139              	@    ldr r1, =_exception_page_init + 0x30 + 2     
 140              	@    str r1, [r0, #0]
 141              	@                 @ entrada: Timer (0x70061000)     
 142              	@    ldr r0, =_memory_page_init + 0x61*4
 143              	@    ldr r1, =_timer0_page_init + 0x30 + 2         
 144              	@    str r1, [r0, #0]
 145              	@                 @ entrada: GIC (0x70062000)    
 146              	@    ldr r0, =_memory_page_init + 0x62*4
 147              	@    ldr r1, =_gic_page_init + 0x30 + 2           
 148              	@    str r1, [r0, #0]
 149              	@                 @ entrada: RAM (0x70063000) 
 150              	@    ldr r0, =_memory_page_init + 0x63*4
 151              	@    ldr r1, =_memory_page_init + 0x30 + 2           
 152              	@    str r1, [r0, #0]
 153              	@                 @ entrada: Dinamic Pages (0x70064000) 
 154              	@    ldr r0, =_memory_page_init + 0x64*4
 155              	@    ldr r1, =_dinamic_pages_init + 0x30 + 2           
 156              	@    str r1, [r0, #0]
 157              	    
 158              	
 159              	Paginacion_RAM:
 160 0104 88009FE5 	    LDR R0, =0x70010000
 161 0108 84609FE5 	    LDR R6, =0x70010000 @ Cargar la dirección de _Direccion_Fisica en R6
 162              	@Tablas_RAM:
 163 010c 64509FE5 	    LDR R5, =_tabla_nivel_1        @ Cargar la dirección de L1 en R5
 164 0110 150000EB 	    BL Incrementar_Puntero_L2 @ Cargar direccion L2 en R4
 165 0114 070000EB 	    BL Funcion_Paginacion
 166              	
 167              	    @guardar R4
 168              	
 169              	@    ADD R0, R0, #0x1000 @ Debemos Paginar toda la RAM: proxima pagina en 0x70011000 = 0x70010000 +
 170              	@    ADD R6, R6, #0x1000 @ Hacemos lo mismo con Direccion_Fisica  
 171              	@    LDR R9, =_Fin_RAM
ARM GAS  src/paginacion.s 			page 4


 172              	@    CMP R9, R0 @ Comparo R9 y R0, se activan flags en CPSR
 173              	@    BGT  @ if R9 > R0 --> Paginamos
 174              	
 175              	/**
 176              	*   Configuración para el uso de la paginación (MMU)
 177              	**/
 178              	// TTRB0 debe apuntar a la tabla de directorio de páginas (Tabla 1)
 179 0118 58009FE5 	    ldr r0, =_tabla_nivel_1
 180 011c 100F02EE 	    mcr p15, 0, r0, c2, c0, 0
 181              	// Todos los dominios van a ser clientes (0x55555555)
 182 0120 70009FE5 	    ldr r0, =0x55555555
 183 0124 100F03EE 	    mcr p15, 0, r0, c3, c0, 0
 184              	// Habilito el MMU
 185 0128 101F11EE 	    mrc p15, 0, r1, c1, c0, 0       @ Leo el registro de control, para poder cambiar el bit necesar
 186 012c 011081E3 	    orr r1, r1, #0x1                @ Bit 0 es habilitación de MMU.
 187 0130 101F01EE 	    mcr p15, 0, r1, c1, c0, 0       @ Escribo el registro de control 
 188              	/**
 189              	* Se termina la creación e inicialización de la paginación
 190              	**/
 191 0134 1EFF2FE1 	    BX LR      
 192              	
 193              	
 194              	@ R0 = Direccion Virtual
 195              	@ LDR R6, =_Direccion_Fisica ; Cargar la dirección de _Direccion_Fisica en R6
 196              	@ LDR R5, =_L1        ; Cargar la dirección de _L1 en R5
 197              	@ LDR R4, =_L2        ; Cargar direccion L2 en R4
 198              	@ BL Funcion_Paginacion
 199              	.arm
 200              	Funcion_Paginacion:
 201 0138 0430A0E1 	    MOV R3, R4 @ R3 = R4 para completar Tabla_Nivel_2 despues
 202 013c 0670A0E1 	    MOV R7, R6 @ R7 = R7 (guardo valor para restaurarlo a R6 al finalizar)
 203              	// Se separa Direccion Virtual en a b c para hacer Offset
 204              	@ R0 = 0xabcd1234, ponga en R1 = 0xabc y en R2 = d1
 205              	Separacion_Direccion_Virtual:
 206 0140 201AA0E1 	    MOV R1, R0, LSR #20 @ a = R1 = R0 >> 20 = 0x00000abc
 207              	
 208 0144 2026A0E1 	    MOV R2, R0, LSR #12  @ R2 = R0 >> 12 = 0x00abcd1
 209 0148 FF2002E2 	    AND R2, R2, #0xFF    @ b = R2 = R2 & 0xFF = 0x0000d1
 210              	
 211              	Tabla_Nivel_1:
 212              	    @ luego cargar en R5 = _L1+ (R1 * 4)
 213              	    @LDR R5, =_L1        @ Cargar la dirección de _L1 en R5
 214 014c 015185E0 	    ADD R5, R5, R1, LSL #2 @ R5 = _L1 + (a*4) <-- L1+Offset: Sumar el desplazamiento (R1 * 4) a la 
 215 0150 014084E2 	    ADD R4, R4, #1      @ habilitacion de Pagina = L2+1 (bit [0])
 216 0154 004085E5 	    STR R4, [R5]
 217              	
 218              	Tabla_Nivel_2:
 219              	    @ luego cargar en R6 = _Direccion_Fisica + (R2 * 4)
 220 0158 023183E0 	    ADD R3, R3, R2, LSL #2 @ R3 = L2 + (b*4)   Sumar el desplazamiento (R2 * 4) a la dirección bas
 221 015c 326086E2 	    ADD R6, R6, #0x32 @ Atributos R/W
 222 0160 006083E5 	    STR R6, [R3]
 223              	
 224 0164 0760A0E1 	    MOV R6, R7
 225              	
 226 0168 1EFF2FE1 	    BX LR
 227              	
 228              	Incrementar_Puntero_L2:
ARM GAS  src/paginacion.s 			page 5


 229 016c 28A09FE5 	    LDR R10, =Size_L2
 230 0170 0A4084E0 	    ADD R4, R4, R10  @ Cargar direccion L2 en R4
 231 0174 1EFF2FE1 	    BX LR
 232 0178 00000000 	
 232      00000000 
 232      00000000 
 232      00100110 
 232      0010001E 
