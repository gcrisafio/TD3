ARM GAS  src/reset_vector.s 			page 1


   1              	/**
   2              	 * Archivo: reset_vector.s
   3              	 * FunciÃ³n: retorno a la zona post reset
   4              	 * Autor: Gabriel Crisafio
   5              	 **/
   6              	
   7              	/* Referencias a funciones externas */
   8              	.extern _Copia_ROM_a_RAM
   9              	
  10              	/* Modo de funcionamiento: arm */
  11              	.code 32
  12              	
  13              	.extern _start
  14              	.global _reset_vector
  15              	
  16              	.section .inicio_reset_vector // seccion .inicio que se ejecuta en ROM 
  17              	// se ejecuta reset_handler en ROM porque es el 1er programa que se ejecuta despues de reset 
  18              	// dentro de este handler se deshabilita IRQ y FIQ para que no se interrumpa el proceso de Reset
  19              	_reset_vector:
  20              	   @ ldr PC,=_start
  21              	
  22              	   /*  Deshabilitamos IRQ y FIQ para que no interrumpan durante el proceso de reset en ARMv7 */
  23 0000 C0000CF1 	   CPSID if 
  24              	   # CPSID if esta mas optimizado (1 instruccion) que las siguientes lineas de codigo:
  25              	   @  mrs	r0,  cpsr        @ Move to general purpose Register a System register
  26              	   @  bic	r0,  r0,  #0x1f  @ BItwise bit Clear
  27              	   @  orr	r0,  r0,  #0xd3  @ OR bitwise 0xd3 -> 11010011 -> CPSR[76x43210]
  28              	   @  msr	cpsr,r0          @ Move to System register a general purpose Register
  29              	
  30              	   /* N Z C V bits = 0 (OPCIONAL si se necesita en la aplicacion)*/
  31 0004 00000FE1 	    mrs	r0,  cpsr
  32 0008 0F02C0E3 	    bic	r0,  r0,  #0xf0000000  /* BItwise bit Clear N, Z, C, V bits */
  33 000c 00F029E1 	    msr	cpsr,r0
  34              	
  35              	   /* Informe de Datos (Marca, Version, etc) de Procesador (OPCIONAL) */
  36 0010 100F10EE 	   mrc	p15, 0, r0, c0, c0, 0 // Identificacion de Procesador en R0 (https://developer.arm.com/docum
  37              	   
  38 0014 FEFFFFEA 	   B _Copia_ROM_a_RAM
  39              	
  40              	.end
