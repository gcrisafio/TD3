
Configuración de la Memoria

Nombre           Origen             Longitud           Atributos
public_ram       0x0000000070030000 0x0000000000001000
public_stack     0x0000000070020000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Guión del enlazador y mapa de memoria

                0x0000000070010000                _PUBLIC_ROM_INIT = 0x70010000
                0x0000000070020000                _PUBLIC_STACK_INIT = 0x70020000
                0x0000000070030000                _PUBLIC_RAM_INIT = 0x70030000
                0x00000000700100c4                _PUBLIC_LMA_SECTION_DATA = ((_PUBLIC_ROM_INIT + _PUBLIC_SIZE_INICIO) + _PUBLIC_SIZE_TEXT)
                0x0000000070030040                _PUBLIC_VMA_SECTION_DATA = (_PUBLIC_RAM_INIT + _PUBLIC_SIZE_TEXT)

.inicio         0x0000000070010000       0x84
                0x0000000070010000                __ROM_start__ = .
 *(.inicio*)
 .inicio        0x0000000070010000       0x44 obj/td3_memcopy_s.o
 .inicio        0x0000000070010044       0x40 obj/td3_c.o
                0x0000000070010044                td3_memcopy
                0x0000000070010084                __ROM_end__ = .
                0x0000000000000084                _PUBLIC_SIZE_INICIO = (__ROM_end__ - __ROM_start__)

.text           0x0000000070030000       0x40 dirección de carga 0x0000000070010084
                0x0000000070030000                __RAM_start__ = .
 *(.text*)
 .text          0x0000000070030000        0x0 obj/td3_memcopy_s.o
 .text_Bootloader
                0x0000000070030000       0x40 obj/td3_memcopy_s.o
                0x0000000070030000                _start
 .text          0x0000000070030040        0x0 obj/td3_c.o
                0x0000000070030040                __RAM_end__ = .
                0x0000000000000040                _PUBLIC_SIZE_TEXT = (__RAM_end__ - __RAM_start__)
                0x0000000070010084                _SECTION_TEXT_LMA = LOADADDR (.text)

.glue_7         0x0000000070030040        0x0 dirección de carga 0x00000000700100c4
 .glue_7        0x0000000070030040        0x0 linker stubs

.glue_7t        0x0000000070030040        0x0 dirección de carga 0x00000000700100c4
 .glue_7t       0x0000000070030040        0x0 linker stubs

.vfp11_veneer   0x0000000070030040        0x0 dirección de carga 0x00000000700100c4
 .vfp11_veneer  0x0000000070030040        0x0 linker stubs

.v4_bx          0x0000000070030040        0x0 dirección de carga 0x00000000700100c4
 .v4_bx         0x0000000070030040        0x0 linker stubs

.iplt           0x0000000070030040        0x0 dirección de carga 0x00000000700100c4
 .iplt          0x0000000070030040        0x0 obj/td3_memcopy_s.o

.rel.dyn        0x0000000070030040        0x0 dirección de carga 0x00000000700100c4
 .rel.iplt      0x0000000070030040        0x0 obj/td3_memcopy_s.o

.data           0x0000000070030040        0x8 dirección de carga 0x00000000700100c4
                0x0000000070030040                __data_start__ = .
 *(.data*)
 .data          0x0000000070030040        0x8 obj/td3_memcopy_s.o
 .data          0x0000000070030048        0x0 obj/td3_c.o
                0x0000000070030048                __data_end__ = .
                0x0000000000000008                _PUBLIC_SIZE_DATA = (__data_end__ - __data_start__)
                0x00000000700100c4                _SECTION_DATA_LMA = LOADADDR (.data)

.igot.plt       0x0000000070030048        0x0 dirección de carga 0x00000000700100cc
 .igot.plt      0x0000000070030048        0x0 obj/td3_memcopy_s.o

.bss            0x0000000070030048        0x4 dirección de carga 0x00000000700100cc
                0x0000000070030048                . = ALIGN (0x4)
                0x0000000070030048                __bss_start__ = .
 *(.bss*)
 .bss           0x0000000070030048        0x4 obj/td3_memcopy_s.o
 .bss           0x000000007003004c        0x0 obj/td3_c.o
                0x000000007003004c                __bss_end__ = .

.stack          0x0000000070020000     0x1000
 *(.stack*)
 .stack         0x0000000070020000     0x1000 obj/td3_memcopy_s.o
LOAD obj/td3_memcopy_s.o
LOAD obj/td3_c.o
OUTPUT(obj/mi_td3_memcopy_v4.elf elf32-littlearm)
LOAD linker stubs

.ARM.attributes
                0x0000000000000000       0x39
 .ARM.attributes
                0x0000000000000000       0x29 obj/td3_memcopy_s.o
 .ARM.attributes
                0x0000000000000029       0x35 obj/td3_c.o

.comment        0x0000000000000000       0x2b
 .comment       0x0000000000000000       0x2b obj/td3_c.o
                                         0x2c (tamaño antes de la relajación)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 obj/td3_c.o

.debug_line     0x0000000000000000       0xca
 .debug_line    0x0000000000000000       0x73 obj/td3_memcopy_s.o
 .debug_line    0x0000000000000073       0x57 obj/td3_c.o

.debug_info     0x0000000000000000       0xe9
 .debug_info    0x0000000000000000       0x22 obj/td3_memcopy_s.o
 .debug_info    0x0000000000000022       0xc7 obj/td3_c.o

.debug_abbrev   0x0000000000000000       0xac
 .debug_abbrev  0x0000000000000000       0x12 obj/td3_memcopy_s.o
 .debug_abbrev  0x0000000000000012       0x9a obj/td3_c.o

.debug_aranges  0x0000000000000000       0x48
 .debug_aranges
                0x0000000000000000       0x28 obj/td3_memcopy_s.o
 .debug_aranges
                0x0000000000000028       0x20 obj/td3_c.o

.debug_str      0x0000000000000000      0x199
 .debug_str     0x0000000000000000       0xa4 obj/td3_memcopy_s.o
 .debug_str     0x00000000000000a4       0xf5 obj/td3_c.o
                                        0x17b (tamaño antes de la relajación)

.debug_ranges   0x0000000000000000       0x30
 .debug_ranges  0x0000000000000000       0x20 obj/td3_memcopy_s.o
 .debug_ranges  0x0000000000000020       0x10 obj/td3_c.o

.debug_frame    0x0000000000000000       0x38
 .debug_frame   0x0000000000000000       0x38 obj/td3_c.o
